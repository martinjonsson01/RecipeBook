@using RecipeBook.Core.Domain.Recipes
@using System.Collections.ObjectModel

<div class="ms-5">
    <FetchList TItem="Step"
               Context="steps"
               Url="@($"/api/v1/recipes/{Recipe.ToUrlSafeName(RecipeName)}/steps")"
               SetSaving="@SetSaving">
        <Header>
            <h2>Steg</h2>
        </Header>
        <ItemsTemplate>
            <ol class="no-style ps-2">
                @foreach (Step step in steps!)
                {
                    <DraggableItem TItem="Step"
                                   Item="step"
                                   Items="steps!"
                                   OnDrop="items => UpdateStepNumbering(items)"
                                   @bind-DraggingIndex="_draggingIndex"
                                   @bind-HoveringIndex="_hoveringIndex">
                        @switch (step)
                        {
                            case TimeStep timeStep:
                                <StepView Url="@($"/api/v1/recipes/{Recipe.ToUrlSafeName(RecipeName)}/steps")"
                                          Step="@timeStep"
                                          SetSaving="@SetSaving"
                                          DeleteItem="() => DeleteStep(steps, timeStep)">
                                    <TimerView Duration="timeStep.Duration"/>
                                </StepView>
                                break;
                            default:
                                <StepView Url="@($"/api/v1/recipes/{Recipe.ToUrlSafeName(RecipeName)}/steps")"
                                          Step="@step"
                                          SetSaving="@SetSaving"
                                          DeleteItem="() => DeleteStep(steps, step)"/>
                                break;
                        }
                    </DraggableItem>
                }
            </ol>
        </ItemsTemplate>
        <CreateNewButtonTemplate Context="steps">
            <CreateNewItemButton Items="steps"
                                 CreateNewItem="CreateNewStep"
                                 CreateNewItemText="Lägg till steg"/>
        </CreateNewButtonTemplate>
    </FetchList>
</div>

@code {
#nullable enable

    [Parameter]
    public string RecipeName { get; set; } = null!;

    [Parameter]
    public EventCallback<(string, LoadStatus)> SetSaving { get; set; } = EventCallback<(string, LoadStatus)>.Empty;

    private Step CreateNewStep(int number)
    {
        return new() { Number = number, Instruction = "Skriv instruktion här" };
    }

    private void DeleteStep(ICollection<Step> steps, Step toRemove)
    {
        UpdateStepNumbering(steps, toRemove);
        steps.Remove(toRemove);
    }

    private void UpdateStepNumbering(ICollection<Step> steps, Step? toIgnore = null)
    {
        var number = 1;
        foreach (var step in steps)
        {
            if (step.Equals(toIgnore)) continue;
            step.Number = number++;
        }
    }

    private int _draggingIndex = -1;
    private int _hoveringIndex = -1;

}