@using RecipeBook.Core.Domain.Recipes
@using Newtonsoft.Json

<div class="container">
    <div class="row mb-4">
        <img class="mb-2" src="@Recipe.ImagePath" alt="@Recipe.Name"/>
        <div class="col-sm-11">
            <h1 class="display-4">@Recipe.Name</h1>
        </div>
        <div class="col-sm-1 d-flex p-0">
            <LoadingIndicator Status="@GetStatus()"/>
        </div>
        <hr/>
    </div>
    <div class="row">
        <div class="col-sm-8">
            <StepsView RecipeName="@Recipe.Name" SetSaving="@SetSaving"/>
        </div>
        <div class="col-sm-4">
            <div class="row">
                <div class="col-sm">
                    <IngredientsView RecipeName="@Recipe.Name" SetSaving="@SetSaving"/>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
#nullable enable

    [Parameter]
    public Recipe Recipe { get; set; } = null!;

    private LoadStatus GetStatus()
    {
        if (_propertyLoading.Count == 0) return LoadStatus.None;
        if (_propertyLoading.ContainsValue(LoadStatus.Fail)) return LoadStatus.Fail;
        if (_propertyLoading.Values.All(status => status == LoadStatus.Success)) return LoadStatus.Success;
        return LoadStatus.Loading;
    }

    private Dictionary<string, LoadStatus> _propertyLoading = new();

    private void SetSaving((string, LoadStatus) state)
    {
        (string property, LoadStatus status) = state;
        if (!_propertyLoading.TryAdd(property, status))
        {
            _propertyLoading[property] = status;
        }
    }

}