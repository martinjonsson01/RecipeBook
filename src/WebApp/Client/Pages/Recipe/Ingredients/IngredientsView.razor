@using RecipeBook.Core.Domain.Recipes
@using RecipeBook.Core.Domain.Units

@inject IJSRuntime _js;

<div class="ingredients bg-white shadow">
    <FetchList TItem="Ingredient"
               Context="ingredients"
               Url="@($"/api/v1/recipes/{RecipeName}/ingredients")"
               SetSaving="@SetSaving"
               CreateNewItemText="Lägg till ingrediens"
               CreateNewItem="CreateNewIngredient">
        <Header>
            <h2 class="p-4">Ingredienser</h2>
        </Header>
        <ItemsTemplate>
            <ol class="no-style p-3">
                @foreach (Ingredient ingredient in ingredients)
                {
                    <li class="container-fluid p-0">
                        <div class="row">
                            <div class="col-3 mb-3 p-0" style="height: 5px">
                                <UnitView @bind-Unit="@ingredient.Amount"/>
                            </div>
                            <div class="col-9 mb-3 p-0">
                                <IngredientView Url="@($"/api/v1/recipes/{RecipeName}/ingredients")"
                                                Ingredient="@ingredient"
                                                SetSaving="@SetSaving"
                                                DeleteItem="() => DeleteIngredient(ingredients, ingredient)"/>
                            </div>
                        </div>
                    </li>
                }
            </ol>
        </ItemsTemplate>
    </FetchList>
</div>

@code {
#nullable enable

    [Parameter]
    public string RecipeName { get; set; } = null!;

    [Parameter]
    public EventCallback<(string, LoadStatus)> SetSaving { get; set; } = EventCallback<(string, LoadStatus)>.Empty;

    private Ingredient CreateNewIngredient(int _)
    {
        return new() { Name = "Skriv ingrediens här", Amount = new Mass(0) };
    }

    private void DeleteIngredient(ICollection<Ingredient> ingredients, Ingredient ingredient)
    {
        ingredients.Remove(ingredient);
    }

}