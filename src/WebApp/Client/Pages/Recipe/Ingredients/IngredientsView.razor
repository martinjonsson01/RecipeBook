@using RecipeBook.Core.Domain.Recipes
@using RecipeBook.Core.Domain.Units

@inject IJSRuntime _js;

<div class="ingredients bg-white shadow">
    <FetchList TItem="Ingredient"
               Context="ingredients"
               Url="@($"/api/v1/recipes/{Recipe.ToUrlSafeName(RecipeName)}/ingredients")"
               SetSaving="@SetSaving">
        <Header>
            <h2 class="p-4">Ingredienser</h2>
        </Header>
        <ItemsTemplate>
            <ol class="no-style p-3">
                @foreach (Ingredient ingredient in ingredients!)
                {

                    
                <DraggableItem TItem="Ingredient"
                               Item="ingredient"
                               Items="ingredients!"
                               OnDrop="items => UpdateStepNumbering(items)"
                               @bind-DraggingIndex="_draggingIndex"
                               @bind-HoveringIndex="_hoveringIndex">
                        <li class="container-fluid p-0">
                            <div class="row">
                                <div class="col-3 mb-3 p-0" style="height: 5px">
                                    <UnitView @bind-Unit="@ingredient.Amount"
                                              Ingredient="@ingredient"/>
                                </div>
                                <div class="col-9 mb-3 p-0">
                                    <IngredientView Url="@($"/api/v1/recipes/{Recipe.ToUrlSafeName(RecipeName)}/ingredients")"
                                                    Ingredient="@ingredient"
                                                    SetSaving="@SetSaving"
                                                    DeleteItem="() => DeleteIngredient(ingredients, ingredient)"/>
                                </div>
                            </div>
                        </li>
                    </DraggableItem>
                }
            </ol>
        </ItemsTemplate>
        <CreateNewButtonTemplate Context="ingredients">
            <CreateNewItemButton TItem="Ingredient"
                                 Items="ingredients"
                                 CreateNewItem="CreateNewIngredient"
                                 CreateNewItemText="Lägg till ingrediens"/>
        </CreateNewButtonTemplate>
    </FetchList>
</div>

@code {
#nullable enable

    [Parameter]
    public string RecipeName { get; set; } = null!;

    [Parameter]
    public EventCallback<(string, LoadStatus)> SetSaving { get; set; } = EventCallback<(string, LoadStatus)>.Empty;

    private Ingredient CreateNewIngredient(int _)
    {
        return new() { Name = "Skriv ingrediens här", Amount = new Mass(0) };
    }

    private void DeleteIngredient(ICollection<Ingredient> ingredients, Ingredient toRemove)
    { 
        UpdateStepNumbering(ingredients, toRemove);
        ingredients.Remove(toRemove);
    }
    
    private void UpdateStepNumbering(ICollection<Ingredient> ingredients, Ingredient? toIgnore = null)
    {
        var order = 1;
        foreach (var ingredient in ingredients)
        {
            if (ingredient.Equals(toIgnore)) continue;
            ingredient.Order = order++;
        }
    }

    private int _draggingIndex = -1;
    private int _hoveringIndex = -1;
}